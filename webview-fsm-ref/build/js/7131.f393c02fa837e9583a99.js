"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunkenv_client_websocket"] = this["webpackChunkenv_client_websocket"] || []).push([[7131],{

/***/ 47131:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": () => (/* binding */ conf),\n/* harmony export */   \"language\": () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.38.0(0e330ae453813de4e6cf272460fb79c7117073d0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/bicep/bicep.ts\nvar bounded = (text) => `\\\\b${text}\\\\b`;\nvar identifierStart = \"[_a-zA-Z]\";\nvar identifierContinue = \"[_a-zA-Z0-9]\";\nvar identifier = bounded(`${identifierStart}${identifierContinue}*`);\nvar keywords = [\n  \"targetScope\",\n  \"resource\",\n  \"module\",\n  \"param\",\n  \"var\",\n  \"output\",\n  \"for\",\n  \"in\",\n  \"if\",\n  \"existing\"\n];\nvar namedLiterals = [\"true\", \"false\", \"null\"];\nvar nonCommentWs = `[ \\\\t\\\\r\\\\n]`;\nvar numericLiteral = `[0-9]+`;\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"'\", close: \"'\" },\n    { open: \"'''\", close: \"'''\" }\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] },\n    { open: \"'''\", close: \"'''\", notIn: [\"string\", \"comment\"] }\n  ],\n  autoCloseBefore: \":.,=}])' \\n\t\",\n  indentationRules: {\n    increaseIndentPattern: new RegExp(\"^((?!\\\\/\\\\/).)*(\\\\{[^}\\\"'`]*|\\\\([^)\\\"'`]*|\\\\[[^\\\\]\\\"'`]*)$\"),\n    decreaseIndentPattern: new RegExp(\"^((?!.*?\\\\/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$\")\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".bicep\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  symbols: /[=><!~?:&|+\\-*/^%]+/,\n  keywords,\n  namedLiterals,\n  escapes: `\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|'|\\\\\\${)`,\n  tokenizer: {\n    root: [{ include: \"@expression\" }, { include: \"@whitespace\" }],\n    stringVerbatim: [\n      { regex: `(|'|'')[^']`, action: { token: \"string\" } },\n      { regex: `'''`, action: { token: \"string.quote\", next: \"@pop\" } }\n    ],\n    stringLiteral: [\n      { regex: `\\\\\\${`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\n      { regex: `[^\\\\\\\\'$]+`, action: { token: \"string\" } },\n      { regex: \"@escapes\", action: { token: \"string.escape\" } },\n      { regex: `\\\\\\\\.`, action: { token: \"string.escape.invalid\" } },\n      { regex: `'`, action: { token: \"string\", next: \"@pop\" } }\n    ],\n    bracketCounting: [\n      { regex: `{`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\n      { regex: `}`, action: { token: \"delimiter.bracket\", next: \"@pop\" } },\n      { include: \"expression\" }\n    ],\n    comment: [\n      { regex: `[^\\\\*]+`, action: { token: \"comment\" } },\n      { regex: `\\\\*\\\\/`, action: { token: \"comment\", next: \"@pop\" } },\n      { regex: `[\\\\/*]`, action: { token: \"comment\" } }\n    ],\n    whitespace: [\n      { regex: nonCommentWs },\n      { regex: `\\\\/\\\\*`, action: { token: \"comment\", next: \"@comment\" } },\n      { regex: `\\\\/\\\\/.*$`, action: { token: \"comment\" } }\n    ],\n    expression: [\n      { regex: `'''`, action: { token: \"string.quote\", next: \"@stringVerbatim\" } },\n      { regex: `'`, action: { token: \"string.quote\", next: \"@stringLiteral\" } },\n      { regex: numericLiteral, action: { token: \"number\" } },\n      {\n        regex: identifier,\n        action: {\n          cases: {\n            \"@keywords\": { token: \"keyword\" },\n            \"@namedLiterals\": { token: \"keyword\" },\n            \"@default\": { token: \"identifier\" }\n          }\n        }\n      }\n    ]\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDcxMzEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEIsS0FBSztBQUNuQztBQUNBO0FBQ0EsNEJBQTRCLGdCQUFnQixFQUFFLG1CQUFtQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLE9BQU8sS0FBSztBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxRQUFRLFlBQVksR0FBRztBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU0sUUFBUSxZQUFZLEdBQUc7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTSxxREFBcUQ7QUFDM0QsTUFBTTtBQUNOO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0EsMERBQTBELEdBQUc7QUFDN0Qsc0VBQXNFO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sUUFBUSxZQUFZLDZCQUE2QjtBQUN2RCxNQUFNLGtEQUFrRDtBQUN4RCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsYUFBYSxtQkFBbUI7QUFDbkQ7QUFDQSxhQUFhLHdCQUF3QixJQUFJLHdCQUF3QjtBQUNqRTtBQUNBLFFBQVEsZ0NBQWdDLG1CQUFtQjtBQUMzRCxRQUFRLHdCQUF3QjtBQUNoQztBQUNBO0FBQ0EsUUFBUSxhQUFhLGFBQWEsd0RBQXdEO0FBQzFGLFFBQVEsK0JBQStCLG1CQUFtQjtBQUMxRCxRQUFRLDZCQUE2QiwwQkFBMEI7QUFDL0QsUUFBUSwwQkFBMEIsa0NBQWtDO0FBQ3BFLFFBQVEsc0JBQXNCO0FBQzlCO0FBQ0E7QUFDQSxRQUFRLFNBQVMsYUFBYSx3REFBd0Q7QUFDdEYsUUFBUSxTQUFTLGFBQWEsNENBQTRDO0FBQzFFLFFBQVE7QUFDUjtBQUNBO0FBQ0EsUUFBUSw0QkFBNEIsb0JBQW9CO0FBQ3hELFFBQVEsMkJBQTJCLGtDQUFrQztBQUNyRSxRQUFRLDJCQUEyQjtBQUNuQztBQUNBO0FBQ0EsUUFBUSxxQkFBcUI7QUFDN0IsUUFBUSwyQkFBMkIsc0NBQXNDO0FBQ3pFLFFBQVEsOEJBQThCO0FBQ3RDO0FBQ0E7QUFDQSxRQUFRLHdCQUF3QixrREFBa0Q7QUFDbEYsUUFBUSxzQkFBc0IsaURBQWlEO0FBQy9FLFFBQVEsaUNBQWlDLG1CQUFtQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixrQkFBa0I7QUFDN0MsZ0NBQWdDLGtCQUFrQjtBQUNsRCwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lbnYtY2xpZW50LXdlYnNvY2tldC8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvYmljZXAvYmljZXAuanM/MDg2NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBWZXJzaW9uOiAwLjM4LjAoMGUzMzBhZTQ1MzgxM2RlNGU2Y2YyNzI0NjBmYjc5YzcxMTcwNzNkMClcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9tb25hY28tZWRpdG9yL2Jsb2IvbWFpbi9MSUNFTlNFLnR4dFxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8vIHNyYy9iYXNpYy1sYW5ndWFnZXMvYmljZXAvYmljZXAudHNcbnZhciBib3VuZGVkID0gKHRleHQpID0+IGBcXFxcYiR7dGV4dH1cXFxcYmA7XG52YXIgaWRlbnRpZmllclN0YXJ0ID0gXCJbX2EtekEtWl1cIjtcbnZhciBpZGVudGlmaWVyQ29udGludWUgPSBcIltfYS16QS1aMC05XVwiO1xudmFyIGlkZW50aWZpZXIgPSBib3VuZGVkKGAke2lkZW50aWZpZXJTdGFydH0ke2lkZW50aWZpZXJDb250aW51ZX0qYCk7XG52YXIga2V5d29yZHMgPSBbXG4gIFwidGFyZ2V0U2NvcGVcIixcbiAgXCJyZXNvdXJjZVwiLFxuICBcIm1vZHVsZVwiLFxuICBcInBhcmFtXCIsXG4gIFwidmFyXCIsXG4gIFwib3V0cHV0XCIsXG4gIFwiZm9yXCIsXG4gIFwiaW5cIixcbiAgXCJpZlwiLFxuICBcImV4aXN0aW5nXCJcbl07XG52YXIgbmFtZWRMaXRlcmFscyA9IFtcInRydWVcIiwgXCJmYWxzZVwiLCBcIm51bGxcIl07XG52YXIgbm9uQ29tbWVudFdzID0gYFsgXFxcXHRcXFxcclxcXFxuXWA7XG52YXIgbnVtZXJpY0xpdGVyYWwgPSBgWzAtOV0rYDtcbnZhciBjb25mID0ge1xuICBjb21tZW50czoge1xuICAgIGxpbmVDb21tZW50OiBcIi8vXCIsXG4gICAgYmxvY2tDb21tZW50OiBbXCIvKlwiLCBcIiovXCJdXG4gIH0sXG4gIGJyYWNrZXRzOiBbXG4gICAgW1wie1wiLCBcIn1cIl0sXG4gICAgW1wiW1wiLCBcIl1cIl0sXG4gICAgW1wiKFwiLCBcIilcIl1cbiAgXSxcbiAgc3Vycm91bmRpbmdQYWlyczogW1xuICAgIHsgb3BlbjogXCJ7XCIsIGNsb3NlOiBcIn1cIiB9LFxuICAgIHsgb3BlbjogXCJbXCIsIGNsb3NlOiBcIl1cIiB9LFxuICAgIHsgb3BlbjogXCIoXCIsIGNsb3NlOiBcIilcIiB9LFxuICAgIHsgb3BlbjogXCInXCIsIGNsb3NlOiBcIidcIiB9LFxuICAgIHsgb3BlbjogXCInJydcIiwgY2xvc2U6IFwiJycnXCIgfVxuICBdLFxuICBhdXRvQ2xvc2luZ1BhaXJzOiBbXG4gICAgeyBvcGVuOiBcIntcIiwgY2xvc2U6IFwifVwiIH0sXG4gICAgeyBvcGVuOiBcIltcIiwgY2xvc2U6IFwiXVwiIH0sXG4gICAgeyBvcGVuOiBcIihcIiwgY2xvc2U6IFwiKVwiIH0sXG4gICAgeyBvcGVuOiBcIidcIiwgY2xvc2U6IFwiJ1wiLCBub3RJbjogW1wic3RyaW5nXCIsIFwiY29tbWVudFwiXSB9LFxuICAgIHsgb3BlbjogXCInJydcIiwgY2xvc2U6IFwiJycnXCIsIG5vdEluOiBbXCJzdHJpbmdcIiwgXCJjb21tZW50XCJdIH1cbiAgXSxcbiAgYXV0b0Nsb3NlQmVmb3JlOiBcIjouLD19XSknIFxcblx0XCIsXG4gIGluZGVudGF0aW9uUnVsZXM6IHtcbiAgICBpbmNyZWFzZUluZGVudFBhdHRlcm46IG5ldyBSZWdFeHAoXCJeKCg/IVxcXFwvXFxcXC8pLikqKFxcXFx7W159XFxcIidgXSp8XFxcXChbXilcXFwiJ2BdKnxcXFxcW1teXFxcXF1cXFwiJ2BdKikkXCIpLFxuICAgIGRlY3JlYXNlSW5kZW50UGF0dGVybjogbmV3IFJlZ0V4cChcIl4oKD8hLio/XFxcXC9cXFxcKikuKlxcXFwqLyk/XFxcXHMqW1xcXFx9XFxcXF1dLiokXCIpXG4gIH1cbn07XG52YXIgbGFuZ3VhZ2UgPSB7XG4gIGRlZmF1bHRUb2tlbjogXCJcIixcbiAgdG9rZW5Qb3N0Zml4OiBcIi5iaWNlcFwiLFxuICBicmFja2V0czogW1xuICAgIHsgb3BlbjogXCJ7XCIsIGNsb3NlOiBcIn1cIiwgdG9rZW46IFwiZGVsaW1pdGVyLmN1cmx5XCIgfSxcbiAgICB7IG9wZW46IFwiW1wiLCBjbG9zZTogXCJdXCIsIHRva2VuOiBcImRlbGltaXRlci5zcXVhcmVcIiB9LFxuICAgIHsgb3BlbjogXCIoXCIsIGNsb3NlOiBcIilcIiwgdG9rZW46IFwiZGVsaW1pdGVyLnBhcmVudGhlc2lzXCIgfVxuICBdLFxuICBzeW1ib2xzOiAvWz0+PCF+PzomfCtcXC0qL14lXSsvLFxuICBrZXl3b3JkcyxcbiAgbmFtZWRMaXRlcmFscyxcbiAgZXNjYXBlczogYFxcXFxcXFxcKHV7WzAtOUEtRmEtZl0rfXxufHJ8dHxcXFxcXFxcXHwnfFxcXFxcXCR7KWAsXG4gIHRva2VuaXplcjoge1xuICAgIHJvb3Q6IFt7IGluY2x1ZGU6IFwiQGV4cHJlc3Npb25cIiB9LCB7IGluY2x1ZGU6IFwiQHdoaXRlc3BhY2VcIiB9XSxcbiAgICBzdHJpbmdWZXJiYXRpbTogW1xuICAgICAgeyByZWdleDogYCh8J3wnJylbXiddYCwgYWN0aW9uOiB7IHRva2VuOiBcInN0cmluZ1wiIH0gfSxcbiAgICAgIHsgcmVnZXg6IGAnJydgLCBhY3Rpb246IHsgdG9rZW46IFwic3RyaW5nLnF1b3RlXCIsIG5leHQ6IFwiQHBvcFwiIH0gfVxuICAgIF0sXG4gICAgc3RyaW5nTGl0ZXJhbDogW1xuICAgICAgeyByZWdleDogYFxcXFxcXCR7YCwgYWN0aW9uOiB7IHRva2VuOiBcImRlbGltaXRlci5icmFja2V0XCIsIG5leHQ6IFwiQGJyYWNrZXRDb3VudGluZ1wiIH0gfSxcbiAgICAgIHsgcmVnZXg6IGBbXlxcXFxcXFxcJyRdK2AsIGFjdGlvbjogeyB0b2tlbjogXCJzdHJpbmdcIiB9IH0sXG4gICAgICB7IHJlZ2V4OiBcIkBlc2NhcGVzXCIsIGFjdGlvbjogeyB0b2tlbjogXCJzdHJpbmcuZXNjYXBlXCIgfSB9LFxuICAgICAgeyByZWdleDogYFxcXFxcXFxcLmAsIGFjdGlvbjogeyB0b2tlbjogXCJzdHJpbmcuZXNjYXBlLmludmFsaWRcIiB9IH0sXG4gICAgICB7IHJlZ2V4OiBgJ2AsIGFjdGlvbjogeyB0b2tlbjogXCJzdHJpbmdcIiwgbmV4dDogXCJAcG9wXCIgfSB9XG4gICAgXSxcbiAgICBicmFja2V0Q291bnRpbmc6IFtcbiAgICAgIHsgcmVnZXg6IGB7YCwgYWN0aW9uOiB7IHRva2VuOiBcImRlbGltaXRlci5icmFja2V0XCIsIG5leHQ6IFwiQGJyYWNrZXRDb3VudGluZ1wiIH0gfSxcbiAgICAgIHsgcmVnZXg6IGB9YCwgYWN0aW9uOiB7IHRva2VuOiBcImRlbGltaXRlci5icmFja2V0XCIsIG5leHQ6IFwiQHBvcFwiIH0gfSxcbiAgICAgIHsgaW5jbHVkZTogXCJleHByZXNzaW9uXCIgfVxuICAgIF0sXG4gICAgY29tbWVudDogW1xuICAgICAgeyByZWdleDogYFteXFxcXCpdK2AsIGFjdGlvbjogeyB0b2tlbjogXCJjb21tZW50XCIgfSB9LFxuICAgICAgeyByZWdleDogYFxcXFwqXFxcXC9gLCBhY3Rpb246IHsgdG9rZW46IFwiY29tbWVudFwiLCBuZXh0OiBcIkBwb3BcIiB9IH0sXG4gICAgICB7IHJlZ2V4OiBgW1xcXFwvKl1gLCBhY3Rpb246IHsgdG9rZW46IFwiY29tbWVudFwiIH0gfVxuICAgIF0sXG4gICAgd2hpdGVzcGFjZTogW1xuICAgICAgeyByZWdleDogbm9uQ29tbWVudFdzIH0sXG4gICAgICB7IHJlZ2V4OiBgXFxcXC9cXFxcKmAsIGFjdGlvbjogeyB0b2tlbjogXCJjb21tZW50XCIsIG5leHQ6IFwiQGNvbW1lbnRcIiB9IH0sXG4gICAgICB7IHJlZ2V4OiBgXFxcXC9cXFxcLy4qJGAsIGFjdGlvbjogeyB0b2tlbjogXCJjb21tZW50XCIgfSB9XG4gICAgXSxcbiAgICBleHByZXNzaW9uOiBbXG4gICAgICB7IHJlZ2V4OiBgJycnYCwgYWN0aW9uOiB7IHRva2VuOiBcInN0cmluZy5xdW90ZVwiLCBuZXh0OiBcIkBzdHJpbmdWZXJiYXRpbVwiIH0gfSxcbiAgICAgIHsgcmVnZXg6IGAnYCwgYWN0aW9uOiB7IHRva2VuOiBcInN0cmluZy5xdW90ZVwiLCBuZXh0OiBcIkBzdHJpbmdMaXRlcmFsXCIgfSB9LFxuICAgICAgeyByZWdleDogbnVtZXJpY0xpdGVyYWwsIGFjdGlvbjogeyB0b2tlbjogXCJudW1iZXJcIiB9IH0sXG4gICAgICB7XG4gICAgICAgIHJlZ2V4OiBpZGVudGlmaWVyLFxuICAgICAgICBhY3Rpb246IHtcbiAgICAgICAgICBjYXNlczoge1xuICAgICAgICAgICAgXCJAa2V5d29yZHNcIjogeyB0b2tlbjogXCJrZXl3b3JkXCIgfSxcbiAgICAgICAgICAgIFwiQG5hbWVkTGl0ZXJhbHNcIjogeyB0b2tlbjogXCJrZXl3b3JkXCIgfSxcbiAgICAgICAgICAgIFwiQGRlZmF1bHRcIjogeyB0b2tlbjogXCJpZGVudGlmaWVyXCIgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIF1cbiAgfVxufTtcbmV4cG9ydCB7XG4gIGNvbmYsXG4gIGxhbmd1YWdlXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///47131\n");

/***/ })

}]);